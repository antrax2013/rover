name: build, test and analyze

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'
  pull_request:
    branches: [ main ]
    paths:
    - '**.cs'
    - '**.csproj'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  DOTNET_VERSION: '8.0.204' # The .NET SDK version to use

permissions:
  contents: read
  pull-requests: write
  id-token: write
  pages: write

jobs:
  build-and-analyze:

    name: Build and analyze
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
     
      - name: Install tools and restore
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool install --global dotnet-stryker
          dotnet tool restore
          dotnet restore

      - name: Build, test and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}          
          STRYKER_TOKEN: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"antrax2013_rover" /o:"antrax2013" /d:sonar.token="${{ env.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:"sonar.verbose=true" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.coverage.exclusions=**/*Program.cs
          dotnet build --configuration Release --no-restore --no-incremental
          dotnet-coverage collect 'dotnet test --no-restore --verbosity normal' -f xml -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ env.SONAR_TOKEN }}"

      - name: Stryker mutator analyze
        env:
          STRYKER_TOKEN: ${{ secrets.STRYKER_DASHBOARD_API_KEY }}
        shell: powershell
        working-directory: ${{ github.workspace }}
        run: dotnet stryker --reporter dashboard --dashboard-api-key ${{ env.STRYKER_TOKEN }}
